<?xml version="1.0" encoding="utf-8"?>
<document xmlns="http://resources.qdexapps.com/schema/v1/QDocument.xsd" name="myDocument" id="G21AD0FC7_F3CC_4F66_A05F_EBA74D3A2DC7">

  <!-- Meta Data -->
  <metadata>
    <title>LA-CALC-4.7 Optimizing with Calculus</title>
    <creator>jason_wang</creator>
    <abstract>This document is for testing purposes only. The material that is presented here should be treated as an example only.</abstract>
    <coverImage src="resources/lassondeLogo.png" />
  </metadata>
  
  <include src="resources/curriculumStylesLassonde.xml" />
  <include src="resources/Utilities.xml" />
  <include src="resources/plotTools.xml" />

  <!--                                      Header & Footer START                                         -->
  <header style="themeColour">
    <stack style="center" orientation="horizontal">
      <p></p>
    </stack>
  </header>
  <footer style="themeColour">
    <stack orientation="horizontal">
      <image style="tiny" src="resources/lassonde.png" inspect="false" />
      <p style="themeColourTitle">
        <style>
          <numbering suffix="true" counter="pages" />
          <textAlignment>center</textAlignment>
          <marginTop>30</marginTop>
          <foreground color="255 255 255" />
        </style>
      </p>
      <image style="tiny" src="resources/york.png" inspect="false" />
    </stack>
  </footer>
  <!--                                      Header & Footer END                                         -->
  
  <!-- Cover Page -->
  <!-- This is the standard way title pages are created. A great website to get copyright free images .. www.pexels.com
  *** The style: "pageLayout" is defined in curriculumStylesLassonde.xml. It simply sets the content to the center and adjusts the width to 80% ***-->
  <section name="section1" style="pageLayout">
    <title style="chapterTitle">4.7 Optimizing with Calculus</title>
    <p style="sectionHeading">Introduction</p>
    <image src="resources/optimization.png" />
    <stack orientation="vertical" style="contentBG">
      <p style="justifiedText">
        Optimization problems in calculus often involve the determination of the optimal value of a quantity. Optimal values are often either the maximum or the minimum values of a certain function.
      </p>
    </stack>
  </section>
  
  <!--QUESTION STEP BY STEP LAYOUT-->
  <!--Setup StepsController with correct number of Steps-->
  <sectionNoTitle style="pageLayout">
    <script>
      local stepsController = StepsController:new({stepsStack=stepsStack, numOfSteps=3, shown_message="Show Step", hidden_message="Hide Step", showStepCounter=true})
    </script>
    <p style="sectionHeading">Step by Step</p>
    <stack orientation="vertical" style="contentBG">
      <p style="subSectionHeading">Question 1</p>
      <p style="justifiedText">What is the minimum possible sum of squares of two numbers if their product is $-16$?</p>
    </stack>
    <stack name="stepsStack">
      <!--Each step is a stack, and each step has alternating background colors-->
      <!--Use Snippet to create any single step stack -->
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Setup Equation</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p>Let's say these two numbers are x and y.</p>
            <p>So the sum of squares of x and y is:</p>
            <p style="centeredText">$s=x^2+y^2$</p>
            <p>In order to minimize $s$, we need to express $s$ with only one variable first.</p>
            <p>From $xy = -16$, we can get:</p>
            <p style="centeredText">$y=-\frac{16}{x}$</p>
            <p>Replace $y$ with $\frac{16}{x}$:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} s(x)&=&x^2 + (\frac{16}{x})^2 \\[6pt] &=&x^2+256x^{-2} \end{matrix}$]]></p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(1)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Solve s'(x)</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p>Finding the minimum value, we need to solve the first derivative of $s(x)$:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} s'(x)&=&2x+256*(-2)x^{-3} \\[6pt] s'(x)&=&2x-512x^{-3} \end{matrix}$]]></p>
            <p>Set $s'(x)$ to 0 and find x:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} 0&=&2x-512x^{-3} \\[6pt] 512x^{-3}&=&2x \\[6pt] \frac{512}{2}&=&x^4 \\[6pt] x&=&256^{-4} \\[6pt] x&=&4 \end{matrix}$]]></p>
            <p style="centeredText">$y=\frac{16}{4}=-4$</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(2)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Verify the Point</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p>To verify if this point is minimum, we need to solve the second derivative of $s(x)$:</p>
            <p style="centeredText">$s''(x)=2+1536x^{-4}$</p>
            <p>$s''(x)$ will always be positive no matter what x is. Therefore, it's always concave up and $x=4, y=-4$ is the minimum point.</p>
            <p>Finally, $s = x^2 + y^2 = 4^2 + (-4)^2 = 32$.</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(3)
          </onClick>
        </button>
      </stack>
    </stack>
  </sectionNoTitle>
  
  <!--QUESTION STEP BY STEP LAYOUT-->
  <!--Setup StepsController with correct number of Steps-->
  <sectionNoTitle style="pageLayout">
    <script>
      local stepsController = StepsController:new({stepsStack=stepsStack, numOfSteps=3, shown_message="Show Step", hidden_message="Hide Step", showStepCounter=true})
    </script>
    <p style="sectionHeading">Step by Step</p>
    <stack orientation="vertical" style="contentBG">
      <p style="subSectionHeading">Question 2</p>
      <p style="justifiedText">To make a box (no top) out of a flat piece of cardboard, you will cut out 4 congruent squares from each corner of the carboard as shown in below, how do you maximize the volume of that box?</p>
      <p style="subSectionHeading">Simulation</p>
      <xyPlot name="plot1" style="centeredText">
        <title>Flat cardboard</title>
        <subtitle>cut-out square has side length x cm.</subtitle>
        <axis dim="x" min="-5" max="35" auto="fixed">
          <title>x-axis (cm)</title>
        </axis>
        <axis dim="y" min="-5" max="25" auto="fixed">
          <title>y-axis (cm)</title>
        </axis>
        <series name="square_series" manual="false" draw="radialFill" capacity="13">
          <style>
            <foreground color="dodgerBlue" />
          </style>
        </series>
        <series name="square_series_2" manual="false" draw="closedLine" capacity="5" />
      </xyPlot>
      <table name="plotControlTable" grid="false" widths="10% 10% 10% 10% 10% 10% 10% 10% 10% 10%">
        <row>
          <column columnSpan="2"></column>
          <column columnSpan="6">
            <script>
              slider1 = 3;
            </script>
            <slider name="slider" min="0" max="10" value="3">
              <onValueChanged>
                local x = round(slider.Value, 0.1);
                if x ~= slider1 then updatePlot1(x); slider1 = x; end
              </onValueChanged>
            </slider>
          </column>
          <column columnSpan="2"></column>
        </row>
        <row>
          <column columnSpan="2">
            <p style="centeredText">x</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Length</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Width</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Height</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Volume</p>
          </column>
        </row>
        <row>
          <column columnSpan="2" name="xValue">
            <p style="centeredText">3.00</p>
          </column>
          <column columnSpan="2" name="length">
            <p style="centeredText">24.00</p>
          </column>
          <column columnSpan="2" name="width">
            <p style="centeredText">14.00</p>
          </column>
          <column columnSpan="2" name="height">
            <p style="centeredText">3.00</p>
          </column>
          <column columnSpan="2" name="volume">
            <p style="centeredText">1008.00</p>
          </column>
        </row>
      </table>     
      <script>
        function updatePlot1(x)
          <!--update table data-->
          local l = 30 - 2 * x;
          local w = 20 - 2 * x;
          plotControlTable:Child(3).xValue:Child(1).Text = string.format("%.2f", x);
          plotControlTable:Child(3).length:Child(1).Text = string.format("%.2f", l);
          plotControlTable:Child(3).width:Child(1).Text = string.format("%.2f", w);
          plotControlTable:Child(3).height:Child(1).Text = string.format("%.2f", x);
          plotControlTable:Child(3).volume:Child(1).Text = string.format("%.2f", l*w*x);

          local square1 = plot1.square_series;
          local square2 = plot1.square_series_2;
          <!--draw cardboard-->
          local lx = 30 - x;
          local wx = 20 - x;
          square1:Add(x,x);
          square1:Add(0,x);
          square1:Add(0,wx);
          square1:Add(x,wx);
          square1:Add(x,20);
          square1:Add(lx,20);
          square1:Add(lx,wx);
          square1:Add(30,wx);
          square1:Add(30,x);
          square1:Add(lx,x);
          square1:Add(lx,0);
          square1:Add(x,0);
          square1:Add(x,x);

          <!--add border square-->
          square2:Add(0,0);
          square2:Add(0,20);
          square2:Add(30,20);
          square2:Add(30,0);
          square2:Add(0,0);
        end
        updatePlot1(plotControlTable:Child(1):Child(2).slider.Value);
      </script>
      <p>In general, the volume of the box can be modelled using the equation:</p>
      <p style="centeredText">$V(x)=x(30-2x)(20-2x)$</p>
      <image src="resources/box.png" alt="box" style="centeredText width50" />
    </stack>
    <stack name="stepsStack">
      <!--Each step is a stack, and each step has alternating background colors-->
      <!--Use Snippet to create any single step stack -->

      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Rewrite Equation</p>
          <stack name="cont" style="invisible">
            <p>Rewrite the volume equation:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} V(x)&=&x(30-2x)(20-2x) \\[6pt] V(x)&=&x(600-40x-60x+4x^2) \\[6pt] V(x)&=&4x^3-100x^2+600x \end{matrix}$]]></p>
            <p>From the simulation, we know that the domain of $x$:</p>
            <p style="centeredText"><![CDATA[$0 \leq x \leq 10$]]></p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(1)
          </onClick>
        </button>
      </stack>


      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Solve $V'(x)$</p>
          <stack name="cont" style="invisible">
            <p>Solve the first derivative of $V(x)$:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} V'(x)&=&3*4x^2-2*100x+600 \\[6pt] V'(x)&=&12x^2-200x+600 \end{matrix}$]]></p>
            <p>Set $V'(x) = 0$ and solve for $x$:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} 0&=&12x^2-200x+600 \\[6pt] x&=&\frac{200 \pm \sqrt{(-200)^2-4*12*600}}{2*12} \\[6pt] x&=&12.74 \hspace{0.5cm} or \hspace{0.5cm} 3.92 \end{matrix}$]]></p>
            <p>Since $x = 12.74$ is out of the domain, $x=3.92$ is the only valid value.</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(2)
          </onClick>
        </button>
      </stack>

      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Solve $V''(x)$</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p>Solve the second derivative of $V(x)$ to check if $x=3.92$ is maximum point:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix} V''(x)&=&24x-200 \\[6pt] V''(3.92)&=&24*3.92-200 \\[6pt] V''(3.92)&=&-105.92 \end{matrix}$]]></p>
            <p><![CDATA[Since $V''(3.92)<0$, it's concave down, thus it's maximum value.]]></p>
            <p>Solve for volume:</p>
            <p style="centeredText">$V(3.92)=3.92*(30-2*3.92)*(20-2*3.92)=1056.3\;cm^3$</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(3)
          </onClick>
        </button>
      </stack>


    </stack>
  </sectionNoTitle>

  <!--QUESTION STEP BY STEP LAYOUT-->
  <!--Setup StepsController with correct number of Steps-->
  <sectionNoTitle style="pageLayout">
    <script>
      local stepsController = StepsController:new({stepsStack=stepsStack, numOfSteps=4, shown_message="Show Step", hidden_message="Hide Step", showStepCounter=true})
    </script>
    <p style="sectionHeading">Step by Step</p>
    <stack orientation="vertical" style="contentBG">
      <p style="subSectionHeading">Question 3</p>
      <p style="justifiedText">You've opened up a shoe factory, you have a wholesaler who's willing to pay you $\$10$ per pair for as many pairs as you are willing to give him, and your cost (thousand) of produce x thousands of pairs is $c(x) = x^3-6x^2+15x$. How many pairs of shoes will you produce to optimize your profit?</p>
    </stack>
    <stack name="stepsStack">
      <!--Each step is a stack, and each step has alternating background colors-->
      <!--Use Snippet to create any single step stack -->
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Revenue (thousand)</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="centeredText">$r(x)=10x$</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(1)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Profit (thousand)</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="centeredText"><![CDATA[$\begin{matrix}p(x)&=&r(x)-c(x) \\[6pt] p(x)&=&10x-x^3+6x^2-15x \\[6pt] p(x)&=&-x^3 + 6x^2 - 5x \end{matrix}$]]></p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(2)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Solve $p'(x)$</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p>Solve the first derivative of $p(x)$ to find critical points:</p>
            <p style="centeredText"><![CDATA[$\begin{matrix}p'(x)&=&-3x^2+12x-5 \\[6pt] 0&=&3x^2-12x+5 \\[6pt] x&=&\frac{12 \pm \sqrt{(-12)^2-4*3*5}}{2*3} \end{matrix}$]]></p>
            <p style="justifiedText">$x=3.528 \hspace{0.5cm} or \hspace{0.5cm} x=0.4725$</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(3)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Solve $p''(x)$</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p>Next, we need to solve the second derivative to verify any of the values is maximum point:</p>
            <p style="centeredText">$p''(x)=-6x+12$</p>
            <p style="justifiedText"><![CDATA[$p''(3.528)<0$, which is concave down and is maximum point.]]></p>
            <p style="justifiedText"><![CDATA[$p''(0.4725)>0$, which is concave up and is minimum point.]]></p>
            <p>Therefore, $3.528$ thousands of shoes need to be produced to optimize your profit.</p>
            <p>And your maximum profit will be:</p>
            <p style="justifiedText">$p(3.528) = (3.528)^3 + 6(3.528)^2 - 5*3.528 = 13.128\;(thousand)$</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(4)
          </onClick>
        </button>
      </stack>
    </stack>
  </sectionNoTitle>

  <!--Practices-->
  <sectionNoTitle style="pageLayout">
    <p style="sectionHeading">Practices</p>
    <stack style="mcStackLayout">
      <p style="subSectionHeading">Question 1</p>
      <!-- Replace with your contents here -->
      <table widths="10% 90%" grid="false">
        <row>
          <column>
            <image src="resources\question.png" inspect="false" />
          </column>
          <column>
            <p>A rectangular storage container with an open top needs to have a volume of $10\;m^3$. The length of its base is twice the width. Material for the base costs $\$10 / m^2$. Material for the sides costs $\$6 / m^2$. Find the cost of the material for the cheapest container.</p>
          </column>
        </row>
      </table>
      <xyPlot name="plot1" style="centeredText">
        <title>Flat cardboard</title>
        <subtitle>The base (the red rectangular) width is x.</subtitle>
        <axis dim="x" min="-6.5" max="6.5" auto="lockAspectRatio">
          <title>x-axis</title>
        </axis>
        <axis dim="y" min="-6.5" max="6.5" auto="fixed">
          <title>y-axis</title>
        </axis>
        <series name="square_series" manual="false" draw="radialFill" capacity="14">
          <style>
            <foreground color="dodgerBlue" />
          </style>
        </series>
        <series name="square_series_2" manual="false" draw="segmentedFill" capacity="5">
          <style>
            <foreground color="quanserRed" />
          </style>
        </series>
        <series name="square_series_3" manual="false" draw="closedLine" capacity="4">
          <style>
            <foreground color="dodgerBlue" />
          </style>
        </series>
      </xyPlot>
      <table name="plotControlTable" grid="false" widths="10% 10% 10% 10% 10% 10% 10% 10% 10% 10%">
        <row>
          <column columnSpan="2"></column>
          <column columnSpan="6">
            <script>
              slider2 = 2;
            </script>
            <slider name="slider" min="1" max="5" value="2">
              <onValueChanged>
                local x = round(slider.Value, 0.05);
                if x ~= slider2 then updatePlot2(x); slider2 = x; end
                updatePlot2(x);
              </onValueChanged>
            </slider>
          </column>
          <column columnSpan="2"></column>
        </row>
        <row>
          <column columnSpan="2">
            <p style="centeredText">x</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Length</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Width</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Height</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Total cost</p>
          </column>
        </row>
        <row>
          <column columnSpan="2" name="xValue">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="length">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="width">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="height">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="cost">
            <p style="centeredText"></p>
          </column>
        </row>
      </table>

      <script>
        function updatePlot2(x)
        local h = 5 / x / x;
        local cost = 20*x*x + 36*h*x;
        plotControlTable:Child(3).xValue:Child(1).Text = string.format("%.2f", x);
        plotControlTable:Child(3).length:Child(1).Text = string.format("%.2f", 2*x);
        plotControlTable:Child(3).width:Child(1).Text = string.format("%.2f", x);
        plotControlTable:Child(3).height:Child(1).Text = string.format("%.2f", h);
        plotControlTable:Child(3).cost:Child(1).Text = string.format("%.2f", cost);

        local square1 = plot1.square_series;
        local square2 = plot1.square_series_2;
        local square3 = plot1.square_series_3;
        <!--draw cardboard-->
        local lx = x+h;
        local wx = 3*x+h;
        local l = lx+h;
        local w = wx+h;
        local x2 = x/2;
        square1:Add(0,0);
        square1:Add(-x2,x);
        square1:Add(-x2,x+h);
        square1:Add(x2,x+h);
        square1:Add(x2,x);
        square1:Add(x2+h,x);
        square1:Add(x2+h,-x);
        square1:Add(x2,-x);
        square1:Add(x2,-x-h);
        square1:Add(-x2,-x-h);
        square1:Add(-x2,-x);
        square1:Add(-x2-h,-x);
        square1:Add(-x2-h,x);
        square1:Add(-x2,x);

        <!--draw middle square-->
        square2:Add(-x2,x);
        square2:Add(x2,x);
        square2:Add(x2,-x);
        square2:Add(-x2,-x);
        square2:Add(-x2,x);

        <!--add border square-->
        square3:Add(-x2-h,x+h);
        square3:Add(x2+h,x+h);
        square3:Add(x2+h,-x-h);
        square3:Add(-x2-h,-x-h);
        end

        updatePlot2(plotControlTable:Child(1):Child(2).slider.Value);
      </script>
      <textField name="input" placeholder="Enter your answer here." />
      <p>
        <size scale="small">Round answer to nearest integer.</size>
      </p>
      <p name="answer" style="invisible">164</p>
      <stack name="answerStack" style="invisible">
        <!--q3 solution-->
        <p>Answer: 164</p>
        <stack name="fullSolution" style="invisible">
          <p>Since we know the volume of the box and the ratio of length and width, we can get height as:</p>
          <p style="centeredText"><![CDATA[$\begin{matrix} V&=&x*2x*h&=&10 \\[6pt] h(x)&=&\frac{10}{2x^2}&& \\[6pt] h(x)&=&\frac{5}{x^2}&& \end{matrix}$]]></p>
          <p>Size of base:</p>
          <p style="centeredText">$b(x)=2x*x=2x^2$</p>
          <p>Size of four sides:</p>
          <p style="centeredText">$s(x)=2(2xh)+2(xh)=6xh=6x*\frac{5}{x^2}=\frac{30}{x}$</p>
          <p>Cost of material:</p>
          <p style="centeredText">$c(x)=10*b+6*s=20x^2+\frac{180}{x}$</p>
          <p>Solve the first derivative of $c(x)$:</p>
          <p style="centeredText">$c'(x)=40x-180x^{-2}$</p>
          <p>Find critical points:</p>
          <p style="centeredText"><![CDATA[$\begin{matrix}0&=&40x-180x^{-2}\\[6pt] x&=&(\frac{9}{2})^{\frac{1}{3}}\\[6pt] x&\approx&1.65\end{matrix}$]]></p>
          <p>To verify it's minimum point, we solve the second derivative of $c(x)$:</p>
          <p style="centeredText"><![CDATA[$\begin{matrix}c''(x)&=&40+360x^{-3}\\[6pt] c''(1.65)&=&40+360(1.65)^{-3}\\[6pt] c''(1.65)&=&120.14\end{matrix}$]]></p>
          <p><![CDATA[Since $c''(1.65)>0$, it's minimum point.]]></p>
          <p>Total cost:</p>
          <p style="centeredText">$c(1.65)=20(1.65)^2+\frac{180}{1.65} \approx 164$</p>
        </stack>
        <button name="fullSolutionBtn" content="Show Full Solution" style="btnSelected">
          <onClick>
            if fullSolutionBtn.Text == "Show Full Solution" then
            answerStack.fullSolution.Style.Visibility = "visible";
            fullSolutionBtn.Text = "Hide Full Solution";
            else
            answerStack.fullSolution.Style.Visibility = "collapsed";
            fullSolutionBtn.Text = "Show Full Solution";
            end
          </onClick>
        </button>
      </stack>
      <p name="feedback" style="invisible" />
      <script>
        local attempt = 0;
        local max = 3;
      </script>
      <button name="btn" content="Check Answer" style="btnSelected">
        <onClick>
          if input.Text ~= answer.Text then
          feedback.Style.Visibility = "visible"
          feedback.Text = "Incorrect! Try again."
          attempt = attempt + 1
          if attempt &gt;= max then
          answerStack.Style.Visibility = "visible"
          end
          else
          feedback.Style.Visibility = "visible"
          feedback.Text = "Correct, Good Job!"
          end
        </onClick>
      </button>      
    </stack>

    <stack style="mcStackLayout">
      <p style="subSectionHeading">Question 2</p>
      <table widths="10% 90%" grid="false">
        <row>
          <column>
            <image src="resources\question.png" inspect="false" />
          </column>
          <column>
            <p>Cut a $100 \; m$ long wire into two parts and construct the left section into an equilateral triangle and construct the right section into a square. How to cut the wire so that minimize the combined areas of the triangle and square?</p>
          </column>
        </row>
      </table>
      <xyPlot name="plot1" style="width70 centeredText">
        <title>Simulation</title>
        <axis dim="x" min="-10" max="110" auto="fixed">
          <title>x-axis</title>
        </axis>
        <axis dim="y" min="-10" max="110" auto="lockAspectRatio">
          <title>y-axis</title>
        </axis>
        <series name="line_series_1" manual="false" capacity="2">
          <style>
            <lineThickness>5</lineThickness>
            <foreground color="dodgerBlue" />
          </style>
        </series>
        <series name="line_series_2" manual="false" capacity="2">
          <style>
            <lineThickness>5</lineThickness>
            <foreground color="quanserRed" />
          </style>
        </series>
        <series name="triangle_series_1" manual="false" draw="triangles" capacity="3">
          <style>
            <foreground color="dodgerBlue" />
          </style>
        </series>
        <series name="square_series" manual="false" draw="segmentedFill" capacity="5">
          <style>
            <foreground color="quanserRed" />
          </style>
        </series>
      </xyPlot>
      <table name="plotControlTable" grid="false" widths="10% 10% 10% 10% 10% 10% 10% 10% 10% 10%">
        <row>
          <column columnSpan="2"></column>
          <column columnSpan="6">
            <script>
              slider3 = 50;
            </script>
            <slider name="slider" min="0" max="100" value="50">
              <onValueChanged>
                local x = round(slider.Value,1);
                if x ~= slider3 then updatePlot3(x); end
              </onValueChanged>
            </slider>
          </column>
          <column columnSpan="2"></column>
        </row>
        <row>
          <column columnSpan="2">
            <p style="centeredText">Left length</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Right length</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Triangle size</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Square size</p>
          </column>
          <column columnSpan="2">
            <p style="centeredText">Total size</p>
          </column>
        </row>
        <row>
          <column columnSpan="2" name="leftLength">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="rightLength">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="triangleSize">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="squareSize">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="2" name="totalSize">
            <p style="centeredText"></p>
          </column>
        </row>
      </table>


      <script>
        function updatePlot3(x)
        local sideT = x/3;
        local sideS = (100-x)/4;
        local h = math.sqrt(3)*sideT/2;
        local h1 = sideT / math.sqrt(3);
        local h2 = h - h1;
        local sizeT = sideT * h / 2;
        local sizeS = sideS * sideS;

        plotControlTable:Child(3).leftLength:Child(1).Text = string.format("%.2f", x);
        plotControlTable:Child(3).rightLength:Child(1).Text = string.format("%.2f", 100-x);
        plotControlTable:Child(3).triangleSize:Child(1).Text = string.format("%.2f", sizeT);
        plotControlTable:Child(3).squareSize:Child(1).Text = string.format("%.2f", sizeS);
        plotControlTable:Child(3).totalSize:Child(1).Text = string.format("%.2f", sizeT+sizeS);

        local line1 = plot1.line_series_1;
        local line2 = plot1.line_series_2;
        local triangle = plot1.triangle_series_1;
        local square = plot1.square_series;

        line1:Add(0,0);
        line1:Add(x,0);
        line2:Add(x,0);
        line2:Add(100,0);

        triangle:Add(25-sideT/2,50-h1);
        triangle:Add(25,50+h2);
        triangle:Add(25+sideT/2,50-h1);

        local side2 = sideS/2;
        square:Add(75-side2,50+side2);
        square:Add(75+side2,50+side2);
        square:Add(75+side2,50-side2);
        square:Add(75-side2,50-side2);
        square:Add(75-side2,50+side2);

        end

        updatePlot3(plotControlTable:Child(1):Child(2).slider.Value);
      </script>
      <textField name="input" placeholder="Enter your answer here." />
      <p>
        <size scale="small">Round answer to 1 decimal place.</size>
      </p>
      <p name="answer" style="invisible">56.5</p>

      <stack name="answerStack" style="invisible">
        <!--q3 solution-->
        <p>Answer: 56.5</p>
        <stack name="fullSolution" style="invisible">
          <p>Let $x$ be the length of left section.</p>
          <p>Triangle side:</p>
          <p style="centeredText">$S_t=\frac{x}{3}$</p>
          <p>Square side:</p>
          <p style="centeredText">$S_s=\frac{100-x}{4}$</p>
          <p>Triangle height:</p>
          <p style="centeredText">$h_t=\sqrt{3}*\frac{S_t}{2}=\frac{\sqrt{3}}{6}x$</p>
          <p>Area of triangle:</p>
          <p style="centeredText"><![CDATA[$\begin{matrix}A_t&=&\frac{1}{2}S_th_t\\[6pt]&=&\frac{\sqrt{3}}{36}x^2 \end{matrix}$]]></p>
          <p>Area of square:</p>
          <p style="centeredText">$A_s=S_s^2=(\frac{100-x}{4})^2$</p>
          <p>Total area:</p>
          <p style="centeredText">$A_{total}=\frac{\sqrt{3}}{36}x^2 + (\frac{100-x}{4})^2$</p>
          <p>Solve first derivative of $A_{total}$:</p>
          <p style="centeredText"><![CDATA[$\begin{matrix}A_{total}'&=&\frac{\sqrt{3}}{18}x+\frac{2*(100-x)}{16}(-1)\\[6pt]&=&\frac{\sqrt{3}}{18}x+\frac{1}{8}x-12.5\end{matrix}$]]></p>
          <p>Find critical points:</p>
          <p style="centeredText"><![CDATA[$\begin{matrix}0&=&\frac{\sqrt{3}}{18}x+\frac{1}{8}x-12.5 \\[6pt] x&=&\frac{12.5}{\frac{\sqrt{3}}{18}+\frac{1}{8}} \\[6pt] x&\approx&56.5\end{matrix}$]]></p>
          <p>To verify it's minimum point, we solve the second derivative of $A_{total}$:</p>
          <p style="centeredText"><![CDATA[$A_{total}''=\frac{\sqrt{3}}{18}+\frac{1}{8}>0$]]></p>
          <p style="justifiedText">Therefore, it's concave up, so cut at $56.5\;m$ minimizes the combined areas of the triangle and square.</p>
        </stack>
        <button name="fullSolutionBtn" content="Show Full Solution" style="btnSelected">
          <onClick>
            if fullSolutionBtn.Text == "Show Full Solution" then
            answerStack.fullSolution.Style.Visibility = "visible";
            fullSolutionBtn.Text = "Hide Full Solution";
            else
            answerStack.fullSolution.Style.Visibility = "collapsed";
            fullSolutionBtn.Text = "Show Full Solution";
            end
          </onClick>
        </button>
      </stack>
      <p name="feedback" style="invisible" />
      <script>
        local attempt = 0;
        local max = 3;
      </script>
      <button name="btn" content="Check Answer" style="btnSelected">
        <onClick>
          if input.Text ~= answer.Text then
          feedback.Style.Visibility = "visible"
          feedback.Text = "Incorrect! Try again."
          attempt = attempt + 1
          if attempt &gt;= max then
          answerStack.Style.Visibility = "visible"
          end
          else
          feedback.Style.Visibility = "visible"
          feedback.Text = "Correct, Good Job!"
          end
        </onClick>
      </button>
    </stack>


  </sectionNoTitle>
  
</document>