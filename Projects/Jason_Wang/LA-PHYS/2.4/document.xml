<?xml version="1.0" encoding="utf-8"?>
<document xmlns="http://resources.qdexapps.com/schema/v1/QDocument.xsd" name="myDocument" id="GC2EEB13E_2838_4C6A_9C7B_DD952A7A7FEA">

  <!-- Meta Data -->
  <metadata>
    <title>LA-PHYS-2.4 Conservation of Momentum in 2-D</title>
    <creator>jason_wang</creator>
    <abstract>This document is for testing purposes only. The material that is presented here should be treated as an example only.</abstract>
    <coverImage src="resources/lassondeLogo.png" />
  </metadata>

  <include src="resources/curriculumStylesLassonde.xml" />
  <include src="resources/Utilities.xml" />
  <include src="resources/plotTools.xml" />
  <include src="resources/simTools.xml" />

  <!--                                      Header & Footer START                                         -->
  <header style="themeColour">
    <stack style="center" orientation="horizontal">
      <p></p>
    </stack>
  </header>
  <footer style="themeColour">
    <stack orientation="horizontal">
      <image style="tiny" src="resources/lassonde.png" inspect="false" />
      <p style="themeColourTitle">
        <style>
          <numbering suffix="true" counter="pages" />
          <textAlignment>center</textAlignment>
          <marginTop>30</marginTop>
          <foreground color="255 255 255" />
        </style>
      </p>
      <image style="tiny" src="resources/york.png" inspect="false" />
    </stack>
  </footer>
  <!--                                      Header & Footer END                                         -->



  <!-- Cover Page -->
  <!-- This is the standard way title pages are created. A great website to get copyright free images .. www.pexels.com
  *** The style: "pageLayout" is defined in curriculumStylesLassonde.xml. It simply sets the content to the center and adjusts the width to 80% ***-->
  <section name="section1" style="pageLayout">
    <title style="chapterTitle">2.4 Conservation of Momentum in 2-D</title>
    <p style="sectionHeading">Introduction</p>
    <image src="resources/collision.jpg" />
    <stack orientation="vertical" style="contentBG">
      <p style="justifiedText">
        If two objects make a head on collision, they can bounce and move along the same direction they approached from (i.e. The conservation of momentum in 1-D module). However, if two objects make a glancing collision, they'll move off in two dimensions after the collision. In this module, we are going to learn conservation of momentum problems in 2-D.
      </p>
    </stack>
  </section>


  <sectionNoTitle style="pageLayout">
    <p style="sectionHeading">Simulation</p>
    <stack style="mcStackLayout">
      <p style="justifiedText">Run the simulation below and observe the velocity changes for these three balls, is the momentum of following system conserved?</p>
      <stack name="simStack">
        <drawing name="drawing">
          <axis dim="x" min="0" max="40" auto="fixed" />
          <axis dim="y" min="0" max="30" auto="fixed" />
          <series name="ball1" draw="radialFill" capacity="800" style="quanserRedF" />
          <series name="ball2" draw="radialFill" capacity="800" style="dodgerBlueF" />
          <series name="ball3" draw="radialFill" capacity="1600" style="forestGreenF" />
        </drawing>
      </stack>
      <button name="btn" content="Start Simulation" style="width50">
        <onClick>
          <![CDATA[
				if btn.Text == "Start Simulation" then
					btn.Text = "Pause Simulation"
					sim:Play();
				else
					btn.Text = "Start Simulation";
					sim:Pause();
				end
			]]>
        </onClick>
      </button>
      <script>
        <![CDATA[
			local myPlot = {};
			
			local balls = {simStack.drawing.ball1,simStack.drawing.ball2,simStack.drawing.ball3};
			local ball1, ball2, ball3, world;
			local seriesSize = 3;
			
			function myPlot:updateData()
				local sum_px = 0;
				local sum_py = 0;
				for i=1,seriesSize do
					local row = dataTable:Child(i+1);
					local v = world.balls[i].velocity;
					local p = world.balls[i]:getMomentum();
					sum_px = sum_px + p[1];
					sum_py = sum_py + p[2];
					row:Child(3):Child(1).Text = string.format("%.2f",v[1]);
					row:Child(4):Child(1).Text = string.format("%.2f",v[2]);
					row:Child(5):Child(1).Text = string.format("%.2f",p[1]);
					row:Child(6):Child(1).Text = string.format("%.2f",p[2]);
				end
				dataTable:Child(2+seriesSize):Child(1):Child(1).FormattedText = string.format("∑p<sub>x</sub>=%.2f",sum_px);
				dataTable:Child(2+seriesSize):Child(2):Child(1).FormattedText = string.format("∑p<sub>y</sub>=%.2f",sum_py);
			end
			
			function myPlot:updateWorld()
				world:update(true);
				myPlot:updateData();
			end
			
			function myPlot:init()
				sim:Stop();
				ball1 = Ball:new({mass=5,velocity={2,0}, x=11, y=16, series=simStack.drawing.ball1});
				ball2 = Ball:new({mass=2.5,velocity={0,0}, x=20, y=15, radius=0.5, series=simStack.drawing.ball2});
				ball3 = Ball:new({mass=10,velocity={-0.25, -0.25},x=27,y=20,radius=2, series=simStack.drawing.ball3});
				world = World:new({deltaT=0.05, balls={ball1,ball2,ball3}});
				
				for i=1,seriesSize do
					world.balls[i]:initDrawing();
				end
				myPlot:updateData()
				
			end
			
			myPlot:init()
			]]>
      </script>
      <table name="dataTable" grid="false" widths="10% 18% 18% 18% 18% 18%">
        <row>
          <column>
            <p style="centeredText">$Ball$</p>
          </column>
          <column>
            <p style="centeredText">$Mass$</p>
          </column>
          <column>
            <p style="centeredText">$v_x$</p>
          </column>
          <column>
            <p style="centeredText">$v_y$</p>
          </column>
          <column>
            <p style="centeredText">$p_x$</p>
          </column>
          <column>
            <p style="centeredText">$p_y$</p>
          </column>
        </row>
        <row>
          <column>
            <p style="quanserRedB"></p>
          </column>
          <column>
            <p style="centeredText">5</p>
          </column>
          <column>
            <p style="centeredText">2</p>
          </column>
          <column>
            <p style="centeredText">0</p>
          </column>
          <column>
            <p style="centeredText"></p>
          </column>
          <column>
            <p style="centeredText"></p>
          </column>
        </row>
        <row>
          <column>
            <p style="dodgerBlueB"></p>
          </column>
          <column>
            <p style="centeredText">2.5</p>
          </column>
          <column>
            <p style="centeredText">0</p>
          </column>
          <column>
            <p style="centeredText">0</p>
          </column>
          <column>
            <p style="centeredText"></p>
          </column>
          <column>
            <p style="centeredText"></p>
          </column>
        </row>
        <row>
          <column>
            <p style="forestGreenB"></p>
          </column>
          <column>
            <p style="centeredText">10</p>
          </column>
          <column>
            <p style="centeredText">-1</p>
          </column>
          <column>
            <p style="centeredText">1</p>
          </column>
          <column>
            <p style="centeredText"></p>
          </column>
          <column>
            <p style="centeredText"></p>
          </column>
        </row>
        <row>
          <column columnSpan="3">
            <p style="centeredText"></p>
          </column>
          <column columnSpan="3">
            <p style="centeredText"></p>
          </column>
        </row>
      </table>
      <p name="data"></p>
      <simulation name="sim" duration="6" period="0.01">
        <onUpdate>
          <![CDATA[
				myPlot:updateWorld();
				if time >= 5.9 then
					btn.Text = "Start Simulation";
					myPlot:init();
				end
				]]>
        </onUpdate>
      </simulation>
    </stack>
  </sectionNoTitle>

  <sectionNoTitle style="pageLayout">
    <p style="sectionHeading">Conservation of Momentum in Two Dimensions</p>
    <stack style="mcStackLayout">
      <p style="subSectionHeading">Definition</p>
      <!-- Replace with your contents here -->
      <p style="justifiedText">In two dimensional situations where momentum is conserved, the conservation law must be applied along each axis independently, which means:</p>
      <p style="centeredText"><![CDATA[$\begin{matrix}\sum p_{x}&=&\sum p'_{x}\\[12pt]\sum p_{y}&=&\sum p'_{y}\end{matrix}$]]></p>
      <p style="justifiedText">Consider following situation:</p>
      <stack name="simStack" orientation="horizontal">
        <drawing name="drawing">
          <style>
            <widthPercentage>0.6</widthPercentage>
            <horizontalAlignment>center</horizontalAlignment>
          </style>
          <axis dim="x" min="0" max="40" auto="fixed" />
          <axis dim="y" min="0" max="30" auto="fixed" />
          <series name="ball1" draw="radialFill" capacity="800" style="quanserRedF" />
          <series name="ball2" draw="radialFill" capacity="800" style="dodgerBlueF" />
          <series name="dash" draw="lineSegments" style="grayF" />
          <series name="dash1" draw="lineSegments" style="grayF" />
          <series name="dash2" draw="lineSegments" style="grayF" />
        </drawing>
        <table name="table" grid="false" widths="30% 35% 35%">
          <style>
            <widthPercentage>0.4</widthPercentage>
            <horizontalAlignment>center</horizontalAlignment>
          </style>
          <row>
            <column>
            </column>
            <column>
              <p style="quanserRedB"></p>
            </column>
            <column>
              <p style="dodgerBlueB"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$mass$</p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$v_x$</p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$v_y$</p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$p_x$</p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$p_y$</p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
            <column>
              <p style="centeredText"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$\sum p_x$</p>
            </column>
            <column columnSpan="2">
              <p style="centeredText"></p>
            </column>
          </row>
          <row>
            <column>
              <p style="centeredText">$\sum p_y$</p>
            </column>
            <column columnSpan="2">
              <p style="centeredText"></p>
            </column>
          </row>
        </table>
      </stack>
      <script>
        <![CDATA[
				local myPlot = {};
				
				local ball1, ball2, world;
				local dash = simStack.drawing.dash;
				local dash1 = simStack.drawing.dash1;
				local dash2 = simStack.drawing.dash2;
				local numOfBalls = 2;
				
				function myPlot:updateData()
					local sum_px = 0;
					local sum_py = 0;
					for i=1,numOfBalls do
						local v = world.balls[i].velocity;
						local p = world.balls[i]:getMomentum();
						sum_px = sum_px + p[1];
						sum_py = sum_py + p[2];
						simStack.table:Child(2):Child(1+i):Child(1).Text = string.format("%.2f",world.balls[i].mass);
						simStack.table:Child(3):Child(1+i):Child(1).Text = string.format("%.2f",v[1]);
						simStack.table:Child(4):Child(1+i):Child(1).Text = string.format("%.2f",v[2]);
						simStack.table:Child(5):Child(1+i):Child(1).Text = string.format("%.2f",p[1]);
						simStack.table:Child(6):Child(1+i):Child(1).Text = string.format("%.2f",p[2]);
					end
					simStack.table:Child(7):Child(2):Child(1).Text = string.format("%.2f",sum_px);
					simStack.table:Child(8):Child(2):Child(1).Text = string.format("%.2f",sum_py);
				end					
				
				function myPlot:init()
					sim:Stop();
					if world ~= nil then
						for i=1,numOfBalls do
							world.balls[i].series:Clear();
						end
					end
					ball1 = Ball:new({mass=5,velocity={2,0}, x=11, y=16, series=simStack.drawing.ball1});
					ball2 = Ball:new({mass=5,velocity={0,0}, x=20, y=15, series=simStack.drawing.ball2});
					world = World:new({deltaT=0.05, balls={ball1,ball2}});
					for i=1,numOfBalls do
						plotTools.drawCircle(world.balls[i].series, vector({0,0}), world.balls[i].radius);
					end
					world:updateTransform();
					self:updateData()
				end
			
				myPlot:init()
				
				-- draw all the dash lines
				local collisionData = Ball.findCollisionPosition(ball1,ball2);
				if collisionData ~= nil then
					local b1 = collisionData[1];
					local b2 = collisionData[2];
					local vec1 = vector({b1.x, b1.y});
					local vec2 = vector({b2.x, b2.y});
					local futureData = b1:findPositionAfter(b2,10);
					b1 = futureData[1];
					b2 = futureData[2];					
					local ang1 = math.atan((b1.y-vec1[2])/(b1.x-vec1[1]));
					local ang2 = math.atan((b2.y-vec2[2])/(b2.x-vec2[1]));
				
					-- draw dash line to the collision point
					plotTools.drawDashLine(dash1, vec1, vector({ball1.x, ball1.y}));
					plotTools.drawDashLine(dash2, vec2, vector({ball2.x, ball2.y}));
				
					-- draw horizontal extend lines for both balls
					plotTools.drawDashLine(dash, vec1, vector({vec1[1]+10, vec1[2]}));
					plotTools.drawDashLine(dash, vec2, vector({vec2[1]+10, vec2[2]}));
				
					-- draw path dash lines for both balls
					plotTools.drawDashLine(dash1, vec1, vector({b1.x,b1.y}));
					plotTools.drawDashLine(dash2, vec2, vector({b2.x,b2.y}));
				
					-- draw angles
					plotTools.drawArc(dash1, 0, math.deg(ang1), vec1, 2);
					plotTools.drawArc(dash2, 0, math.deg(ang2), vec2, 2);
				end
				
				-- show ball path and angles
				function myPlot:showPath()
					dash.Visible = true;
					dash1.Visible = true;
					dash2.Visible = true;
				end
				
				-- hide ball path and angles
				function myPlot:hidePath()
					dash.Visible = false;
					dash1.Visible = false;
					dash2.Visible = false;
				end
				
				myPlot:hidePath()
				]]>
      </script>
      <simulation name="sim" duration="2" period="0.01">
        <onUpdate>
          <![CDATA[
				world:update(true);
				myPlot:updateData();
				if time >= 1.9 then
					btnStack.btn.Text = "Reset Simulation";
				end
				]]>
        </onUpdate>
      </simulation>
      <stack name="btnStack" orientation="horizontal">
        <style>
          <horizontalAlignment>center</horizontalAlignment>
        </style>
        <button name="btn" content="Start Simulation" style="width50">
          <onClick>
            <![CDATA[
				if btn.Text == "Start Simulation" then
					btn.Text = "Pause Simulation"
					sim:Play();
				elseif btn.Text == "Reset Simulation" then
					btn.Text = "Start Simulation";
					myPlot:init();
				else
					btn.Text = "Start Simulation";
					sim:Pause();
				end
			]]>
          </onClick>
        </button>
        <button name="pathBtn" content="Show Path" style="width50">
          <onClick>
            <![CDATA[
						if pathBtn.Text == "Show Path" then
							pathBtn.Text = "Hide Path"
							myPlot:showPath()
						else
							pathBtn.Text = "Show Path"
							myPlot:hidePath()
						end
						]]>
          </onClick>
        </button>
      </stack>
    </stack>
  </sectionNoTitle>


  <!--QUESTION STEP BY STEP LAYOUT-->
  <!--Setup StepsController with correct number of Steps-->
  <sectionNoTitle style="pageLayout">
    <script>
      local stepsController = StepsController:new({stepsStack=stepsStack, numOfSteps=4, shown_message="Show Step", hidden_message="Hide Step", showStepCounter=true})
    </script>
    <p style="sectionHeading">Step by Step</p>
    <stack orientation="vertical" style="contentBG">
      <p style="subSectionHeading">Example 1</p>
      <p style="justifiedText">Consider two balls. Ball A has 10kg mass and travel $3m/s$ constant speed to the right. Ball B has 5kg mass and it doesn't move. At some point, ball A hits ball B. Ball A now is going at $2m/s$ with 30º angle to the horizontal.</p>
      <p style="justifiedText">What's the velocity of Ball B?</p>
      <drawing name="drawing">
        <axis dim="x" min="0" max="40" auto="fixed" />
        <axis dim="y" min="0" max="30" auto="fixed" />
        <series name="ball1" draw="radialFill" capacity="800" style="quanserRedF" />
        <series name="ball2" draw="radialFill" capacity="800" style="dodgerBlueF" />
        <series name="dash" draw="lineSegments" style="grayF" />
        <series name="dash1" draw="lineSegments" style="grayF" />
        <series name="dash2" draw="lineSegments" style="grayF" />
      </drawing>
      <script>
        <![CDATA[
				local myPlot = {};
				
				local ball1, ball2, world;
				local dash = drawing.dash;
				local dash1 = drawing.dash1;
				local dash2 = drawing.dash2;
				local numOfBalls = 2;
				
				function myPlot:init()
					ball1 = Ball:new({mass=5,velocity={2,0}, x=11, y=16.7, series=drawing.ball1});
					ball2 = Ball:new({mass=5,velocity={0,0}, x=20, y=15, series=drawing.ball2});
					world = World:new({deltaT=0.05, balls={ball1,ball2}});
					for i=1,numOfBalls do
						world.balls[i]:initDrawing();
					end
				end
			
				myPlot:init()
				
				-- draw all the dash lines
				local collisionData = Ball.findCollisionPosition(ball1,ball2);
				if collisionData ~= nil then
					local b1 = collisionData[1];
					local b2 = collisionData[2];
					local vec1 = vector({b1.x, b1.y});
					local vec2 = vector({b2.x, b2.y});
					local futureData = b1:findPositionAfter(b2,10);
					b1 = futureData[1];
					b2 = futureData[2];					
					local ang1 = math.atan((b1.y-vec1[2])/(b1.x-vec1[1]));
					local ang2 = math.atan((b2.y-vec2[2])/(b2.x-vec2[1]));
				
					-- draw dash line to the collision point
					plotTools.drawDashLine(dash1, vec1, vector({ball1.x, ball1.y}));
					plotTools.drawDashLine(dash2, vec2, vector({ball2.x, ball2.y}));
				
					-- draw horizontal extend lines for both balls
					plotTools.drawDashLine(dash, vec1, vector({vec1[1]+10, vec1[2]}));
					plotTools.drawDashLine(dash, vec2, vector({vec2[1]+10, vec2[2]}));
				
					-- draw path dash lines for both balls
					plotTools.drawDashLine(dash1, vec1, vector({b1.x,b1.y}));
					plotTools.drawDashLine(dash2, vec2, vector({b2.x,b2.y}));
				
					-- draw angles
					plotTools.drawArc(dash1, 0, math.deg(ang1), vec1, 2);
					plotTools.drawArc(dash2, 0, math.deg(ang2), vec2, 2);
					
					-- add angle label
					char.num3(dash, vector({vec1[1]+3, vec1[2]+0.2}), 1);
					char.num0(dash, vector({vec1[1]+4, vec1[2]+0.2}), 1);
				end
				
				-- show ball path and angles
				function myPlot:showPath()
					dash.Visible = true;
					dash1.Visible = true;
					dash2.Visible = true;
				end
				
				-- hide ball path and angles
				function myPlot:hidePath()
					dash.Visible = false;
					dash1.Visible = false;
					dash2.Visible = false;
				end
				
				myPlot:hidePath()
				]]>
      </script>
      <simulation name="sim" duration="2" period="0.01">
        <onUpdate>
          <![CDATA[
				world:update(true);
				if time >= 1.9 then
					sim:Stop();
					btnStack.btn.Text = "Reset Simulation";
				end
				]]>
        </onUpdate>
      </simulation>
      <stack name="btnStack" orientation="horizontal">
        <style>
          <horizontalAlignment>center</horizontalAlignment>
        </style>
        <button name="btn" content="Start Simulation" style="width50">
          <onClick>
            <![CDATA[
				if btn.Text == "Start Simulation" then
					btn.Text = "Pause Simulation"
					sim:Play();
				elseif btn.Text == "Reset Simulation" then
					btn.Text = "Start Simulation";
					myPlot:init();
				else
					btn.Text = "Start Simulation";
					sim:Pause();
				end
			]]>
          </onClick>
        </button>
        <button name="pathBtn" content="Show Path" style="width50">
          <onClick>
            <![CDATA[
						if pathBtn.Text == "Show Path" then
							pathBtn.Text = "Hide Path"
							myPlot:showPath()
						else
							pathBtn.Text = "Show Path"
							myPlot:hidePath()
						end
						]]>
          </onClick>
        </button>
      </stack>
    </stack>
    <stack name="stepsStack">

      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Find Total Initial Momentum</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="justifiedText">Since ball B was initially at rest, therefore, ball B has 0 initial momentum both x and y axis.</p>
            <p style="justifiedText">Ball A initially has a horizontal velocity pointing to the right, therefore, Ball A only has initial momentum on x-axis.</p>
            <stack orientation="horizontal">
              <p style="centeredText"><![CDATA[$\begin{matrix}\sum p_{x} &=& p_{A,x} + 0 \\[8pt] &=& m_A \times v_{A,x} \\[8pt] &=& 10kg * 3m/s\\[8pt] &=& 30 kg\,m/s \end{matrix}$]]></p>
              <p style="centeredText"><![CDATA[$\sum p_y = 0$]]></p>
            </stack>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(1)
          </onClick>
        </button>
      </stack>

      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Find Ball A Velocity Components</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="justifiedText">Since Ball A after collision has an 30 degree angle, we need to separate its final velocity into x and y components.</p>
            <p style="centeredText"><![CDATA[$v'_{A,x} = v_{A} \times cos(30) = 2m/s \times cos(30) = \sqrt{3}$]]></p>
            <p style="centeredText"><![CDATA[$v'_{A,y} = v_{A} \times sin(30) = 2m/s \times sin(30) = 1$]]></p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(2)
          </onClick>
        </button>
      </stack>

      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Find Ball B Velocity Components</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="justifiedText">Since the momentum is conserved, the initial momentum and the final momentum are equal, and so do their components.</p>
            <p style="centeredText"><![CDATA[$\begin{matrix}\sum p = \sum p'\\[8pt]\sum p_{x}=\sum p'_{x}\\[8pt]\sum p_{y}=\sum p'_{y}\end{matrix}$]]></p>
            <stack orientation="horizontal">
              <p style="centeredText"><![CDATA[$\begin{matrix}\sum p_{x}&=&\sum p'_{x}\\[8pt]30&=&p'_{A,x}+p'_{B,x}\\[8pt]30&=&m_A \times v'_{A,x} + m_B \times v'_{B,x}\\[8pt]30&=&10 \times \sqrt{3} + 5 \times v'_{B,x}\\[8pt]v'_{B,x}&=&2.54m/s \end{matrix}$]]></p>
              <p style="centeredText"><![CDATA[$\begin{matrix}\sum p_{y}&=&\sum p'_{y}\\[8pt]0&=&p'_{A,y} + p'_{B,y}\\[8pt]0&=&m_A \times v'_{A,y} + m_B \times v'_{B,y}\\[8pt]0&=&10\times 1 + 5 \times v'_{B,y}\\[8pt]v'_{B,y}&=&-2m/s \end{matrix}$]]></p>
            </stack>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(3)
          </onClick>
        </button>
      </stack>

      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Find Ball B's after Collision Angle and Velocity</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="centeredText"><![CDATA[$\theta=tan^-1(\frac{v'_{B,y}}{v'_{B,x}}) \times \frac{180}{\pi} = 38.22^o \, East\,South$]]></p>
            <p style="centeredText"><![CDATA[$v'_B = \sqrt{{v'_{B,x}}^2 + {v'_{B,y}}^2} = \sqrt{2.54\times 2.54 + -2 \times -2} = 3.23 m/s$]]></p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(4)
          </onClick>
        </button>
      </stack>
    </stack>
  </sectionNoTitle>

  <!--QUESTION STEP BY STEP LAYOUT-->
  <!--Setup StepsController with correct number of Steps-->
  <sectionNoTitle style="pageLayout">
    <script>
      local stepsController = StepsController:new({stepsStack=stepsStack, numOfSteps=5, shown_message="Show Step", hidden_message="Hide Step", showStepCounter=true})
    </script>
    <p style="sectionHeading">Step by Step - Inelastic Collision</p>
    <stack orientation="vertical" style="contentBG">
      <p style="subSectionHeading">Question 2</p>
      <p style="justifiedText">A 8kg red ball traveling to east at $5\,m/s$ collides with a 5kg blue ball traveling to north at $10\,m/s$. Two balls stick together. What's the velocity after collision?</p>
      <drawing name="drawing">
        <axis dim="x" min="0" max="40" auto="fixed" />
        <axis dim="y" min="0" max="30" auto="fixed" />
        <series name="ball1" draw="radialFill" capacity="800" style="quanserRedF" />
        <series name="ball2" draw="radialFill" capacity="800" style="dodgerBlueF" />
        <series name="dash" draw="lineSegments" style="grayF" />
      </drawing>
      <script>
        <![CDATA[
				local myPlot = {};
				
				local ball1, ball2, world;
				local dash = drawing.dash;
				local numOfBalls = 2;
				
				function myPlot:init()
					ball1 = Ball:new({mass=8,velocity={5,0}, x=15, y=15, elastic=false, series=drawing.ball1});
					ball2 = Ball:new({mass=5,velocity={0,10}, x=20, y=5, elastic=false, series=drawing.ball2});
					world = World:new({balls={ball1,ball2}});
					for i=1,numOfBalls do
						world.balls[i]:initDrawing();
					end
				end
			
				myPlot:init()
				
				
				-- draw all the dash lines
				local cp = {20,15};
				local collisionData = Ball.findCollisionPosition(ball1,ball2);
				local b1 = collisionData[1]
				local b2 = collisionData[2]
				local ang = math.atan(b1.velocity[2]/b1.velocity[1])
				-- draw dash line to the collision point
				plotTools.drawDashLine(dash, vector({cp[1]+6,cp[2]}), vector({ball1.x, ball1.y}),nil,15)
				plotTools.drawDashLine(dash, vector({cp[1],cp[2]}), vector({ball2.x, ball2.y}))
				plotTools.drawDashLine(dash, vector(cp), vector({cp[1]+6, cp[2]+6*math.tan(ang)}))
				
				-- draw angles
				plotTools.drawArc(dash, 0, math.deg(ang), vector(cp), 2);
					
				]]>
      </script>
      <simulation name="sim" duration="6" period="0.01">
        <onUpdate>
          <![CDATA[
				world:update(true);
				if time >= 1.9 then
					sim:Stop();
					btn.Text = "Reset Simulation";
				end
				]]>
        </onUpdate>
      </simulation>
      <button name="btn" content="Start Simulation" style="width50">
        <onClick>
          <![CDATA[
				if btn.Text == "Start Simulation" then
					btn.Text = "Pause Simulation"
					sim:Play();
				elseif btn.Text == "Reset Simulation" then
					btn.Text = "Start Simulation";
					myPlot:init();
				else
					btn.Text = "Start Simulation";
					sim:Pause();
				end
			]]>
        </onClick>
      </button>
    </stack>
    <stack name="stepsStack">
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Given</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="justifiedText">
              <![CDATA[
Let's represent red ball as ball 1 and blue ball as ball 2.
$m_1 = 8kg \; m_2 = 5kg$
$v_{1ix}=5m/s \; v_{1iy}=0m/s$
$v_{2ix}=0m/s \; v_{2iy}=10m/s$
				]]>
            </p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(1)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Goal</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="justifiedText">Find $\overrightarrow{v}_f$</p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(2)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Setup Equations</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="justifiedText">
              <![CDATA[
Since there is just one object to deal with after the collision, there are only 2 unknowns:  the magnitude and direction of the final velocity of the combined balls.  Thus, the 2 conservation of momentum equations will be sufficient to solve the problem.
				]]>
            </p>
            <p style="centeredText">
              <![CDATA[
$\begin{matrix}
	P_{ix}&=&P_{fx}\\[8pt]
	p_{1ix}+p_{2ix}&=&p_{fx}\\[8pt]
	m_1 \times v_{1ix} + m_2 \times v_{2ix} &=& (m_1 + m_2) \times \overrightarrow{v}_{f}cos(\theta)\\[8pt]
	m_1 \times v_{1ix} &=& (m_1 + m_2) \times \overrightarrow{v}_{f}cos(\theta)
\end{matrix}$
				]]>
            </p>
            <p style="centeredText">
              <![CDATA[
$\begin{matrix}
	P_{iy}&=&P_{fy}\\[8pt]
	p_{1iy}+p_{2iy}&=&p_{fy}\\[8pt]
	m_1 \times v_{1iy} + m_2 \times v_{2iy} &=& (m_1 + m_2) \times \overrightarrow{v}_{f}sin{\theta}\\[8pt]
	m_2 \times v_{2iy} &=& (m_1 + m_2) \times \overrightarrow{v}_{f}sin{\theta}
\end{matrix}$
				]]>
            </p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(3)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Find the Angle</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="centeredText">
	<![CDATA[
$\begin{matrix}
	\frac{m_2 \times v{2iy}}{m_1 \times v_{1ix}} &=& \frac{(m_1+m_2)\times \overrightarrow{v}_{f}sin{\theta}}{(m_1 + m_2) \times \overrightarrow{v}_{f}cos(\theta)} \\[8pt]
	\frac{m_2 \times v{2iy}}{m_1 \times v_{1ix}} &=& tan(\theta)\\[8pt]
	\theta &=& tan^{-1}(\frac{m_2 \times v{2iy}}{m_1 \times v_{1ix}}) \\[8pt]
	\theta &=& tan^{-1}(\frac{5kg \times 10m/s}{8kg \times 5m/s}) \\[8pt]	
	\theta &=& 51.34^o
\end{matrix}$
				]]></p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(4)
          </onClick>
        </button>
      </stack>
      <stack orientation="horizontal">
        <stack name="stepStack" orientation="vertical">
          <p>Find $\overrightarrow{v}_f$</p>
          <stack name="cont" style="invisible">
            <!--CONTENT GOES HERE-->
            <p style="centeredText">
              <![CDATA[
$\begin{matrix}
	m_2 \times v_{2iy} &=& (m_1 + m_2) \times \overrightarrow{v}_fsin{\theta}\\[8pt]
	5kg \times 10m/s &=& (8kg + 5kg) \times \overrightarrow{v}_fsin(51.34^o)\\[8pt]
	\overrightarrow{v}_f &=& 4.93 m/s \; 51.34^o \, North \, of \, East
\end{matrix}$
				]]>
            </p>
          </stack>
        </stack>
        <button name="btn" style="stepByStepBtn">
          <!-- Insert the step index to the method below -->
          <onClick>
            stepsController:toggleStep(5)
          </onClick>
        </button>
      </stack>
    </stack>
  </sectionNoTitle>
  
  <!--Practices-->
  <sectionNoTitle style="pageLayout">
    <p style="sectionHeading">Practices</p>
    <stack style="mcStackLayout">
      <p style="subSectionHeading">Question 3</p>
      <table widths="10% 90%" grid="false">
        <row>
          <column>
            <image src="resources\question.png" inspect="false" />
          </column>
          <column>
            <p style="justifiedText">
              A stationary $300g$ puck is struck by a $200g$ puck moving with a velocity of $2.00 m/s$ West. After the collision, the $200g$ puck has a velocity of $1.00m/s\,[53.0^o \, N \,of \, W]$. Calculate the velocity of the $300g$ puck.
            </p>
          </column>
        </row>
      </table>
      <textField name="input" placeholder="Enter your answer here. (round to nearest integer)" />
      <p name="answer" style="invisible">1.07</p>
      <stack name="answerStack" style="invisible">
        <!--q3 solution-->
        <p>Answer: 1.07m/s; $29.59^o[S\,of\,W]$</p>
        <p style="centeredText">
          <![CDATA[
$m_1 = 0.3kg$
$m_2=0.2kg$
$\overrightarrow{v}_{1i}=0$
$\overrightarrow{v}_{2i}=2m/s\;180^o[N\,of\,E]$
$\overrightarrow{v}_{2f}=1.00m/s\;127^o[N\,of\,E]$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[
$\begin{matrix}
	P_{ix} &=& P_{fx}\\[8pt]
	m_1 \times v_{1ix} + m_2 \times v_{2ix} &=& p_{1fx} + m_2 \times v_{2fx} \\[8pt]
	0.3kg \times 0 + 0.2kg \times -2m/s &=& p_{1fx} + 0.2kg \times (1.00m/s \times cos(127^o)) \\[8pt]
	p_{1fx} &=& -0.28kg\,m/s
\end{matrix}$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[
$\begin{matrix}
	P_{iy} &=& P_{fy}\\[8pt]
	m_1 \times v_{1iy} + m_2 \times v_{2iy} &=& p_{1fy} + m_2 \times v_{2fy} \\[8pt]
	0.3kg \times 0 + 0.2kg \times 0 &=& p_{1fy} + 0.2kg \times (1.00m/s \times sin(127^o)) \\[8pt]
	p_{1fy} &=& -0.16kg\,m/s
\end{matrix}$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[
$\overrightarrow{p}_{1f}=\sqrt{(-0.28kg\,m/s)^2+(-0.15kg\,m/s)^2}=0.32kg\,m/s$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[$\theta=tan^{-1}(\frac{-0.16}{-0.28})=29.59^o[S\,of\,W]$]]>
        </p>
        <p style="centeredText">
          <![CDATA[$\overrightarrow{v}_{1f}=0.32kg\,m/s \ 0.3kg = 1.07m/s\;29.59^o[S\,of\,W]$]]>
        </p>
      </stack>
      <p name="feedback" style="invisible" />
      <script>
        local attempt = 0;
        local max = 3;
      </script>
      <button name="btn" content="Check Answer" style="btnSelected">
        <onClick>
          if input.Text ~= answer.Text then
          feedback.Style.Visibility = "visible"
          feedback.Text = "Incorrect! Try again."
          attempt = attempt + 1
          if attempt &gt;= max then
          answerStack.Style.Visibility = "visible"
          end
          else
          feedback.Style.Visibility = "visible"
          feedback.Text = "Correct, Good Job!"
          end
        </onClick>
      </button>
    </stack>
    <stack style="mcStackLayout">
      <p style="subSectionHeading">Question 4</p>
      <table widths="10% 90%" grid="false">
        <row>
          <column>
            <image src="resources\question.png" inspect="false" />
          </column>
          <column>
            <p style="justifiedText">
              A $400kg$ bomb sitting at rest on a table explodes into three pieces. A $150kg$ piece moves off to the East with a velocity of $150m/s$. A $100kg$ piece moves off with a velocity of $200m/s\,[30.0^o\,S\,of\,W]$. What's the velocity of the third piece?
            </p>
          </column>
        </row>
      </table>
      <textField name="input" placeholder="Enter your answer here. (round to 2 decimal digits)" />
      <p name="answer" style="invisible">75.08</p>
      <stack name="answerStack" style="invisible">
        <!--q3 solution-->
        <p>Answer: 75.08m/s; $62.6^o[N\,of\,E]$</p>
        <p style="centeredText">
          <![CDATA[
$M = 400kg$
$\overrightarrow{v}_i = 0m/s$
$m_1 = 150kg$
$m_2 = 100kg$
$\overrightarrow{v}_{1f}=150m/s\,[0^o]$
$\overrightarrow{v}_{2f}=200m/s\,[210.0^o]$
$m_3 = M - m_1 - m_2 = 150kg$
$\overrightarrow{v}_{3f}=?$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[
$\begin{matrix}
	P_{ix} &=& P_{fx}\\[8pt]
	0 &=& m_1 \times v_{1fx} + m_2 \times v_{2fx} + p_{3fx} \\[8pt]
	0 &=& 150kg \times 150m/s + 100kg \times (200m/s \times cos(210^o)) + p_{3fx} \\[8pt]
	p_{3fx} &=& 5179.49kg\,m/s
\end{matrix}$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[
$\begin{matrix}
	P_{iy} &=& P_{fy}\\[8pt]
	0 &=& m_1 \times v_{1fy} + m_2 \times v_{2fy} + p_{3fy} \\[8pt]
	0 &=& 150kg \times 0m/s + 100kg \times (200m/s \times sin(210^o)) + p_{3fy} \\[8pt]
	p_{1fy} &=& 10000kg\,m/s
\end{matrix}$
				]]>
        </p>
        <p style="centeredText">
          <![CDATA[$p_{3f}=\sqrt{10000^2 + 5179.49^2}=11261.75 kg\,m/s$]]>
        </p>
        <p style="centeredText">
          <![CDATA[$\theta=tan^{-1}(\frac{10000}{5179.49})=62.6^o[N\,of\,E]$]]>
        </p>
        <p style="centeredText">
          <![CDATA[$\overrightarrow{v}_{3f} = \frac{11261.75kg\,m/s}{150kg} = 75.08m/s\;62.6^o[N\,of\,E]$]]>
        </p>
      </stack>
      <p name="feedback" style="invisible" />
      <script>
        local attempt = 0;
        local max = 3;
      </script>
      <button name="btn" content="Check Answer" style="btnSelected">
        <onClick>
          if input.Text ~= answer.Text then
          feedback.Style.Visibility = "visible"
          feedback.Text = "Incorrect! Try again."
          attempt = attempt + 1
          if attempt &gt;= max then
          answerStack.Style.Visibility = "visible"
          end
          else
          feedback.Style.Visibility = "visible"
          feedback.Text = "Correct, Good Job!"
          end
        </onClick>
      </button>
    </stack>
  </sectionNoTitle>

  <!--Challenge-->
  <sectionNoTitle style="pageLayout">
    <p style="sectionHeading">Challenge</p>
    <stack style="mcStackLayout">
      <p style="subSectionHeading">Question 5</p>
      <p style="justifiedText">A bomb sitting at rest on a table explodes into four pieces of equal mass. The first piece travels to the South at a velocity of $55.0m/s$. The second piece travels to the West at a velocity of $80.0m/s$. The third piece travels at a velocity of $40.0m/s\;[30.0^o\,W\,of\,N]$. What's the velocity of the fourth piece?</p>
      <textField name="input" placeholder="Enter your answer here. (round to 2 decimal digits)" />
      <p name="answer" style="invisible">75.08</p>
      <stack name="answerStack" style="invisible">
        <!--q3 solution-->
        <p>Answer: 134m/s; $41.9^o[S\,of\,E]$</p>
      </stack>
      <p name="feedback" style="invisible" />
      <script>
        local attempt = 0;
        local max = 3;
      </script>
      <button name="btn" content="Check Answer" style="btnSelected">
        <onClick>
          if input.Text ~= answer.Text then
          feedback.Style.Visibility = "visible"
          feedback.Text = "Incorrect! Try again."
          attempt = attempt + 1
          if attempt &gt;= max then
          answerStack.Style.Visibility = "visible"
          end
          else
          feedback.Style.Visibility = "visible"
          feedback.Text = "Correct, Good Job!"
          end
        </onClick>
      </button>
    </stack>
  </sectionNoTitle>
  
</document>